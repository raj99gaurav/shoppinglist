{"ast":null,"code":"var _jsxFileName = \"/Users/rajgaurav/Developer/simple-shopping-list/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faChevronLeft, faCircle, faCheckCircle, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n  // HINT: each \"item\" in our list names a name,\n  // a boolean to tell if its been completed, and a quantity\n  const [items, setItems] = useState([{\n    itemName: 'item 1',\n    quantity: 1,\n    isSelected: false\n  }, {\n    itemName: 'item 2',\n    quantity: 3,\n    isSelected: true\n  }, {\n    itemName: 'item 3',\n    quantity: 2,\n    isSelected: false\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [totalItemCount, setTotalItemCount] = useState(6);\n\n  const handleAddButtonClick = () => {\n    const newItem = {\n      itemName: inputValue,\n      quantity: 1,\n      isSelected: false\n    };\n    const newItems = [...items, newItem];\n    setItems(newItems);\n    setInputValue('');\n    calculateTotal();\n  };\n\n  const handleQuantityIncrease = index => {\n    const newItems = [...items];\n    newItems[index].quantity++;\n    setItems(newItems);\n    calculateTotal();\n  };\n\n  const handleQuantityDecrease = index => {\n    const newItems = [...items];\n    newItems[index].quantity--;\n    setItems(newItems);\n    calculateTotal();\n  };\n\n  const toggleComplete = index => {\n    const newItems = [...items];\n    newItems[index].isSelected = !newItems[index].isSelected;\n    setItems(newItems);\n  };\n\n  const calculateTotal = () => {\n    const totalItemCount = items.reduce((total, item) => {\n      return total + item.quantity;\n    }, 0);\n    setTotalItemCount(totalItemCount);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-item-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputValue,\n    onChange: event => setInputValue(event.target.value),\n    className: \"add-item-input\",\n    placeholder: \"Add an item...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    onClick: () => handleAddButtonClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-name\",\n    onClick: () => toggleComplete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }\n  }, item.isSelected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCheckCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, item.itemName)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, item.itemName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronLeft,\n    onClick: () => handleQuantityDecrease(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \" \", item.quantity, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronRight,\n    onClick: () => handleQuantityIncrease(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, \"Total: \", totalItemCount)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/rajgaurav/Developer/simple-shopping-list/src/App.js"],"names":["React","useState","useEffect","FontAwesomeIcon","faChevronRight","faChevronLeft","faCircle","faCheckCircle","faPlus","App","items","setItems","itemName","quantity","isSelected","inputValue","setInputValue","totalItemCount","setTotalItemCount","handleAddButtonClick","newItem","newItems","calculateTotal","handleQuantityIncrease","index","handleQuantityDecrease","toggleComplete","reduce","total","item","event","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faChevronLeft, faCircle, faCheckCircle, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst App = () => {\n\t// HINT: each \"item\" in our list names a name,\n\t// a boolean to tell if its been completed, and a quantity\n\tconst [items, setItems] = useState([\n\t\t{ itemName: 'item 1', quantity: 1, isSelected: false },\n\t\t{ itemName: 'item 2', quantity: 3, isSelected: true },\n\t\t{ itemName: 'item 3', quantity: 2, isSelected: false },\n\t]);\n\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [totalItemCount, setTotalItemCount] = useState(6);\n\n\tconst handleAddButtonClick = () => {\n\t\tconst newItem = {\n\t\t\titemName: inputValue,\n\t\t\tquantity: 1,\n\t\t\tisSelected: false,\n\t\t};\n\n\t\tconst newItems = [...items, newItem];\n\n\t\tsetItems(newItems);\n\t\tsetInputValue('');\n\t\tcalculateTotal();\n\t};\n\n\tconst handleQuantityIncrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity++;\n\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t};\n\n\tconst handleQuantityDecrease = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].quantity--;\n\n\t\tsetItems(newItems);\n\t\tcalculateTotal();\n\t};\n\n\tconst toggleComplete = (index) => {\n\t\tconst newItems = [...items];\n\n\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\n\t\tsetItems(newItems);\n\t};\n\n\tconst calculateTotal = () => {\n\t\tconst totalItemCount = items.reduce((total, item) => {\n\t\t\treturn total + item.quantity;\n\t\t}, 0);\n\n\t\tsetTotalItemCount(totalItemCount);\n\t};\n\n\treturn (\n\t\t<div className='app-background'>\n\t\t\t<div className='main-container'>\n\t\t\t\t<div className='add-item-box'>\n\t\t\t\t\t<input value={inputValue} onChange={(event) => setInputValue(event.target.value)} className='add-item-input' placeholder='Add an item...' />\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} onClick={() => handleAddButtonClick()} />\n\t\t\t\t</div>\n\t\t\t\t<div className='item-list'>\n\t\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t\t<div className='item-container'>\n\t\t\t\t\t\t\t<div className='item-name' onClick={() => toggleComplete(index)}>\n\t\t\t\t\t\t\t\t{item.isSelected ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCheckCircle} />\n\t\t\t\t\t\t\t\t\t\t<span className='completed'>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCircle} />\n\t\t\t\t\t\t\t\t\t\t<span>{item.itemName}</span>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='quantity'>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronLeft} onClick={() => handleQuantityDecrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span> {item.quantity} </span>\n\t\t\t\t\t\t\t\t<button>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronRight} onClick={() => handleQuantityIncrease(index)} />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className='total'>Total: {totalItemCount}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}